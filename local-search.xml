<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>M1 mac下搭建使用qt creator + QMYSQL驱动</title>
    <link href="/2022/08/06/M1-mac%E4%B8%8B%E6%90%AD%E5%BB%BA%E4%BD%BF%E7%94%A8qt-creator-QMYSQL%E9%A9%B1%E5%8A%A8/"/>
    <url>/2022/08/06/M1-mac%E4%B8%8B%E6%90%AD%E5%BB%BA%E4%BD%BF%E7%94%A8qt-creator-QMYSQL%E9%A9%B1%E5%8A%A8/</url>
    
    <content type="html"><![CDATA[<h3 id="💡前提：安装Xcode"><a href="#💡前提：安装Xcode" class="headerlink" title="💡前提：安装Xcode"></a>💡前提：安装Xcode</h3><h2 id="安装homebrew"><a href="#安装homebrew" class="headerlink" title="安装homebrew"></a>安装homebrew</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">/bin/zsh -c &quot;$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)&quot;<br></code></pre></td></tr></table></figure><p>选择中科大镜像，并安装弹窗中的命令行开发者工具，安装完再执行以上命令</p><p>切换国内安装源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd &quot;$(brew --repo)&quot; &amp;&amp; git remote set-url origin git://mirrors.ustc.edu.cn/brew.git &amp;&amp; cd &quot;$(brew --repo)/Library/Taps/homebrew/homebrew-core&quot; &amp;&amp; git remote set-url origin https://mirrors.ustc.edu.cn/homebrew-core.git &amp;&amp; cd &quot;$(brew --repo)/Library/Taps/homebrew/homebrew-cask&quot; &amp;&amp; git remote set-url origin https://mirrors.ustc.edu.cn/homebrew-cask.git &amp;&amp; cd &quot;$(brew --repo)&quot;/Library/Taps/homebrew/homebrew-cask-versions &amp;&amp; git remote set-url origin https://github.com/Homebrew/homebrew-cask-versions.git<br></code></pre></td></tr></table></figure><p>重启终端，下载qt</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">brew install qt<br></code></pre></td></tr></table></figure><p>检验是否安装成功,执行以下命令，回显信息比较多，可以看见路径</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">brew info qt<br></code></pre></td></tr></table></figure><p><img src="/../images/e6c9d24egy1h1ub18t5pfj20vm0jq7a1.png" alt="1"></p><h2 id="安装HomeBrew-Cask"><a href="#安装HomeBrew-Cask" class="headerlink" title="安装HomeBrew-Cask"></a>安装HomeBrew-Cask</h2><p>cask可以安装.app的软件</p><p>方法一：利用国内源手动clone下载（推荐）<br>创建homebrew-cask文件夹<br>进入homebrew目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> <span class="hljs-string">&quot;<span class="hljs-subst">$(brew --repo)</span>/Library/Taps/homebrew/&quot;</span><br></code></pre></td></tr></table></figure><p>创建homebrew-cask文件夹</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">mkdir homebrew-cask<br></code></pre></td></tr></table></figure><p>开始clone</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">git clone git:<span class="hljs-regexp">//mi</span>rrors.ustc.edu.cn<span class="hljs-regexp">/homebrew-cask.git/u</span>sr<span class="hljs-regexp">/local/</span>Homebrew<span class="hljs-regexp">/Library/</span>Taps<span class="hljs-regexp">/homebrew/</span>homebrew-cask<br></code></pre></td></tr></table></figure><p>方法二：利用官网文件安装<br>从官网上下载<code>homebrew-cask-master.zip</code>压缩包，解压后将文件夹名改为<code>homebrew-cask</code><br>然后将其拷贝放入<code>/usr/local/Homebrew/Library/Taps/homebrew</code>中，与<code>homebrew-core</code>文件夹同级    </p><blockquote><p>官网: <a href="https://github.com/Homebrew/homebrew-cask">https://github.com/Homebrew/homebrew-cask</a></p></blockquote><h2 id="安装qt-creator"><a href="#安装qt-creator" class="headerlink" title="安装qt creator"></a>安装qt creator</h2><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">brew </span><span class="hljs-keyword">install </span>qt-creator<br></code></pre></td></tr></table></figure><p>安装完发现启动台多了一个软件，打开</p><p><img src="/../images/e6c9d24egy1h1ub7miil3j20bo086wej.png" alt="."></p><h2 id="配置qt-creator"><a href="#配置qt-creator" class="headerlink" title="配置qt creator"></a>配置qt creator</h2><p>打开首选项<img src="/../images/e6c9d24egy1h1ub8lv3wbj20ds0e6gmk.png?" alt="."></p><p>配置kits，主要是Qt Version和Debuggers</p><p>e6c9d24egy1h1ub8lv3wbj20ds0e6gmk<img src="/../images/e6c9d24egy1h1ucbt7jxhj21ef0u0jvk.png" alt="2"></p><h3 id="配置Qt-Version"><a href="#配置Qt-Version" class="headerlink" title="配置Qt Version"></a>配置Qt Version</h3><p>在终端先查看qt路径</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">brew</span> <span class="hljs-literal">info</span> qt<br></code></pre></td></tr></table></figure><p><img src="/../images/e6c9d24egy1h1ucdiut0nj21ce0hoq9l.png" alt="3"></p><blockquote><p>以我这里为例是在<code>/opt/homebrew/Cellar/qt/6.2.3_1</code></p></blockquote><p>进入该文件夹，访问<code>bin</code>文件夹，找到qmake文件，最后将该路径填入Qt version</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/opt/</span>homebrew<span class="hljs-regexp">/Cellar/</span>qt<span class="hljs-regexp">/6.2.3_1/</span>bin/qmake<br></code></pre></td></tr></table></figure><p><img src="/../images/e6c9d24egy1h1ucgvl5bhj21f70u0dk0.png" alt="4"></p><h3 id="配置Debuggers"><a href="#配置Debuggers" class="headerlink" title="配置Debuggers"></a>配置Debuggers</h3><p>一般有默认自动检测到的LLDB，如果没有就添加我图示中Xcode下的LLDB(要先装Xcode)</p><p>路径：<code>/Applications/Xcode.app/Contents/Developer/usr/bin/lldb</code></p><p><img src="/../images/e6c9d24egy1h1ucjcdt7hj21dx0u00vy.png" alt="5"></p><h3 id="返回到Kits选择刚刚配置好的版本"><a href="#返回到Kits选择刚刚配置好的版本" class="headerlink" title="返回到Kits选择刚刚配置好的版本"></a>返回到Kits选择刚刚配置好的版本</h3><p>一般情况下这里的编译器(Compiler)都会自动检测到本机所带环境，不用更改</p><p><img src="/../images/e6c9d24egy1h1uckxzx6bj21n00u0q81.png" alt="6"></p><h3 id="新建一个项目"><a href="#新建一个项目" class="headerlink" title="新建一个项目"></a>新建一个项目</h3><p><img src="/../images/e6c9d24egy1h1ucm7hh0gj21ni0u076u.png" alt="7"></p><h3 id="选择模版"><a href="#选择模版" class="headerlink" title="选择模版"></a>选择模版</h3><p><img src="/../images/e6c9d24egy1h1ucmnslqlj21c60u0acl.png" alt="8"></p><h3 id="选择路径-不能带中文"><a href="#选择路径-不能带中文" class="headerlink" title="选择路径(不能带中文)"></a>选择路径(不能带中文)</h3><p><img src="/../images/e6c9d24egy1h1ucnji2ynj218g0tcwgp.png" alt="9"></p><h3 id="选择qmake"><a href="#选择qmake" class="headerlink" title="选择qmake"></a>选择qmake</h3><p><img src="/../images/e6c9d24egy1h1uco09mb9j218g0tcgn0.png" alt="10"></p><h3 id="剩下一直都点继续，直到Kits-选择刚刚配置的"><a href="#剩下一直都点继续，直到Kits-选择刚刚配置的" class="headerlink" title="剩下一直都点继续，直到Kits,选择刚刚配置的"></a>剩下一直都点继续，直到Kits,选择刚刚配置的</h3><p><img src="/../images/e6c9d24egy1h1ucp7tqxcj218g0tc76c.png" alt="11"></p><h3 id="构建项目"><a href="#构建项目" class="headerlink" title="构建项目"></a>构建项目</h3><p><img src="/../images/e6c9d24egy1h1ucpqyve4j218g0tcjtd.png" alt="12"></p><h3 id="运行项目，会自动生成一个默认的空白框"><a href="#运行项目，会自动生成一个默认的空白框" class="headerlink" title="运行项目，会自动生成一个默认的空白框"></a>运行项目，会自动生成一个默认的空白框</h3><p><img src="/../images/e6c9d24egy1h1ucr1dk8zj20tg0gqdgs.png" alt="."></p><p><img src="/../images/e6c9d24egy1h1ucrjmkltj20zu0si750.png" alt="."></p><blockquote><p>具体的使用可以去b站搜qt教程</p></blockquote><h2 id="Qt搭配mysql"><a href="#Qt搭配mysql" class="headerlink" title="Qt搭配mysql"></a>Qt搭配mysql</h2><h3 id="动态链接库下载"><a href="#动态链接库下载" class="headerlink" title="动态链接库下载"></a>动态链接库下载</h3><p>若要搭配mysql写项目，需要添加动态链接库<code>libqsqlmysql.dylib</code>，网上大部分教程都是下载qt源码进行编译，但由于M1是arm64架构，编译的过程会有很多报错以及路径不对的问题，网上能下载的动态链接库也大多不是arm架构的，因此不得不提到mac下的神器<code>homebrew</code>,终端执行命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">brew install qt-mysql<br></code></pre></td></tr></table></figure><blockquote><p>brew会自动匹配下载最新qt版本的动态链接库，因此建议qt也使用homebrew安装</p></blockquote><p>进入目录<code>/opt/homebrew/Cellar/qt-mysql/6.2.3/share/qt/plugins/sqldrivers</code>将这个动态链接库放到<code>/opt/homebrew/Cellar/qt/6.2.3_1/share/qt/plugins/sqldrivers</code>中</p><p><img src="/../images/e6c9d24ely1h4xfpipwhjj21fg0okgng.png" alt="13"></p><blockquote><p>注意版本号对应</p></blockquote><h3 id="引入SQL模块"><a href="#引入SQL模块" class="headerlink" title="引入SQL模块"></a>引入SQL模块</h3><p>在项目的.pro文件的首行加上sql</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs cpp">QT       += core gui sql <span class="hljs-comment">//修改处</span><br><br><span class="hljs-built_in">greaterThan</span>(QT_MAJOR_VERSION, <span class="hljs-number">4</span>): QT += widgets<br><br>CONFIG += c++<span class="hljs-number">17</span><br><br><span class="hljs-comment">//...</span><br></code></pre></td></tr></table></figure><h3 id="连接mysql数据库"><a href="#连接mysql数据库" class="headerlink" title="连接mysql数据库"></a>连接mysql数据库</h3><p>进入qt项目执行以下代码打印数据库驱动</p><p>mainwindow.cpp</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;mainwindow.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;ui_mainwindow.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;QSqlDatabase&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;QDebug&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;QMessageBox&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;QSqlError&gt;</span></span><br><span class="hljs-comment">//...</span><br><span class="hljs-built_in">qDebug</span>()&lt;&lt;QSqlDatabase::<span class="hljs-built_in">drivers</span>();<span class="hljs-comment">//查看当前可用驱动</span><br></code></pre></td></tr></table></figure><blockquote><p>可用驱动中有QMYSQL即为成功</p><img src="../images/e6c9d24ely1h4xg0zi3z4j20gk02yglv.png" alt="1212" style="zoom:50%;" /></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp">QSqlDatabase db=QSqlDatabase::<span class="hljs-built_in">addDatabase</span>(<span class="hljs-string">&quot;QMYSQL&quot;</span>);<span class="hljs-comment">//添加一个数据库</span><br>db.<span class="hljs-built_in">setHostName</span>(<span class="hljs-string">&quot;127.0.0.1&quot;</span>);<span class="hljs-comment">//设置主机ip</span><br>db.<span class="hljs-built_in">setUserName</span>(<span class="hljs-string">&quot;username&quot;</span>);<span class="hljs-comment">//mysql数据库用户名</span><br>db.<span class="hljs-built_in">setPassword</span>(<span class="hljs-string">&quot;password&quot;</span>);<span class="hljs-comment">//密码</span><br>db.<span class="hljs-built_in">setDatabaseName</span>(<span class="hljs-string">&quot;db&quot;</span>);<span class="hljs-comment">//连接的数据库名</span><br><span class="hljs-keyword">if</span>(db.<span class="hljs-built_in">open</span>()==<span class="hljs-literal">false</span>)&#123;<span class="hljs-comment">//打开失败的警告</span><br>    QMessageBox::<span class="hljs-built_in">warning</span>(<span class="hljs-keyword">this</span>,<span class="hljs-string">&quot;waring&quot;</span>,db.<span class="hljs-built_in">lastError</span>().<span class="hljs-built_in">text</span>());<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>运行项目只要没有警告框弹出就说明连接数据库成功</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>环境搭建</category>
      
    </categories>
    
    
    <tags>
      
      <tag>mac</tag>
      
      <tag>qt</tag>
      
      <tag>mysql</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
